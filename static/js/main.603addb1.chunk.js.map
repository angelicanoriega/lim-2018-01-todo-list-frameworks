{"version":3,"sources":["components/TodoForm.js","App.js","registerServiceWorker.js","index.js"],"names":["Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","description","InputChange","bind","assertThisInitialized","Submit","e","console","log","props","preventDefault","onAddTodo","setState","alert","_e$target","target","value","name","defineProperty","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","Component","App","todos","upList","complet","index","window","confirm","filter","i","document","getElementById","hasAttribute","removeAttribute","setAttribute","todo","toConsumableArray","concat","_this2","map","key","priority","id","onClick","removelist","href","length","TodoForm","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.603addb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n    };\r\n    this.InputChange = this.InputChange.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n  }\r\n\r\n  Submit(e) {\r\n    console.log(this.props);\r\n    e.preventDefault();\r\n    if(this.state.title||this.state.description !==''){\r\n      this.props.onAddTodo(this.state);\r\n      console.log(this.state);\r\n      this.setState({\r\n        title: '',\r\n        description: '',\r\n      });\r\n    }\r\n    else{console.log(this.state);\r\n\r\n      console.log(this.state.title);\r\n\r\n      alert('completa los campos faltantes')\r\n    }\r\n  \r\n  }\r\n\r\n  InputChange(e) {\r\n\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\" text-center row\">\r\n      <div className=\"col-md-12 card\">\r\n        <form onSubmit={this.Submit} className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className=\"form-control\"\r\n              value={this.state.title}\r\n              onChange={this.InputChange}\r\n              placeholder=\"Titulo\"\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.InputChange}\r\n              placeholder=\"Contenido\"\r\n              />\r\n          </div>     \r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Guardar\r\n          </button>\r\n        </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { todos } from './todos.json';\r\nimport Form from './components/TodoForm';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos\r\n    }\r\n    this.upList = this.upList.bind(this);\r\n    this.complet = this.complet.bind(this);\r\n\r\n  }\r\n\r\n  removelist(index) {\r\n    console.log(index);\r\n    \r\n   if (window.confirm('Estas segur@ de eliminar esta lista?')) {\r\n    this.setState({\r\n    todos: this.state.todos.filter((e, i) => {\r\n    return i !== index\r\n      })\r\n    }); \r\n    } \r\n  }\r\n  complet(index){\r\n   if(document.getElementById(this.state.todos[index].title).hasAttribute('class')){\r\n    document.getElementById(this.state.todos[index].title).removeAttribute('class')\r\n   }\r\n   else{\r\n    document.getElementById(this.state.todos[index].title).setAttribute('class','change');\r\n   }\r\n  }\r\n  upList(todo) {\r\n    this.setState({\r\n      todos: [...this.state.todos, todo]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const todos = this.state.todos.map((todo, i) => {\r\n      return (\r\n        <div className=\"col-md-4\" key={i}>\r\n          <div className=\"card mt-4\">\r\n            <div className=\"card-title text-center\">\r\n              <h3>{todo.title}</h3>\r\n              <span className=\"badge badge-pill badge-danger ml-2\">\r\n                {todo.priority}\r\n              </span>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <div  id={todo.title}>\r\n            {todo.description}\r\n            </div>\r\n            </div>\r\n              \r\n            <div className=\"card-footer text-center\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={this.removelist.bind(this, i)}>\r\n                Borrar\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning ml-5 text-white\"\r\n                onClick={this.complet.bind(this, i)}>\r\n                Completado\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <nav className=\"navbar navbar-dark bg-warning\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            Lista de Cocina\r\n            <span className=\"badge badge-pill badge-light ml-2\">\r\n              {this.state.todos.length}\r\n            </span>\r\n          </a>\r\n        </nav>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row mt-4\">\r\n\r\n            <div className=\"col-md-12 text-center\">\r\n              <Form onAddTodo={this.upList}></Form>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                {todos}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}