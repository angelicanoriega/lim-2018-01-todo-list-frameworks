{"version":3,"sources":["components/TodoForm.js","App.js","registerServiceWorker.js","index.js"],"names":["Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","description","InputChange","bind","assertThisInitialized","Submit","e","console","log","props","preventDefault","onAddTodo","setState","alert","_e$target","target","value","name","defineProperty","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","Component","App","todos","upList","complet","index","window","confirm","filter","i","document","getElementById","hasAttribute","removeAttribute","setAttribute","todo","toConsumableArray","concat","_this2","map","key","priority","id","onClick","removelist","length","TodoForm","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f71ac400.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor () {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n    };\n    this.InputChange = this.InputChange.bind(this);\n    this.Submit = this.Submit.bind(this);\n  }\n\n  Submit(e) {\n    console.log(this.props);\n    e.preventDefault();\n    if(this.state.title||this.state.description !==''){\n      this.props.onAddTodo(this.state);\n      console.log(this.state);\n      this.setState({\n        title: '',\n        description: '',\n      });\n    }\n    else{console.log(this.state);\n\n      console.log(this.state.title);\n\n      alert('completa los campos faltantes')\n    }\n  \n  }\n\n  InputChange(e) {\n\n    const {value, name} = e.target;\n    console.log(value, name);\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\" text-center row\">\n      <div className=\"col-md-12 card\">\n        <form onSubmit={this.Submit} className=\"card-body\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              value={this.state.title}\n              onChange={this.InputChange}\n              placeholder=\"Titulo\"\n              />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"description\"\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.InputChange}\n              placeholder=\"Contenido\"\n              />\n          </div>     \n          <button type=\"submit\" className=\"btn btn-primary\">\n            Guardar\n          </button>\n        </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { todos } from './todos.json';\nimport Form from './components/TodoForm';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos\n    }\n    this.upList = this.upList.bind(this);\n    this.complet = this.complet.bind(this);\n\n  }\n\n  removelist(index) {\n    console.log(index);\n    \n   if (window.confirm('Estas segur@ de eliminar esta lista?')) {\n    this.setState({\n    todos: this.state.todos.filter((e, i) => {\n    return i !== index\n      })\n    }); \n    } \n  }\n  complet(index){\n   if(document.getElementById(this.state.todos[index].title).hasAttribute('class')){\n    document.getElementById(this.state.todos[index].title).removeAttribute('class')\n   }\n   else{\n    document.getElementById(this.state.todos[index].title).setAttribute('class','change');\n   }\n  }\n  upList(todo) {\n    this.setState({\n      todos: [...this.state.todos, todo]\n    })\n  }\n\n  render() {\n    const todos = this.state.todos.map((todo, i) => {\n      return (\n        <div className=\"col-md-4\" key={i}>\n          <div className=\"card mt-4\">\n            <div className=\"card-title text-center\">\n              <h3>{todo.title}</h3>\n              <span className=\"badge badge-pill badge-danger ml-2\">\n                {todo.priority}\n              </span>\n            </div>\n            <div className=\"card-body\">\n            <div  id={todo.title}>\n            {todo.description}\n            </div>\n            </div>\n              \n            <div className=\"card-footer text-center\">\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.removelist.bind(this, i)}>\n                Borrar\n              </button>\n              <button\n                className=\"btn btn-warning ml-5 text-white\"\n                onClick={this.complet.bind(this, i)}>\n                Completado\n              </button>\n            </div>\n          </div>\n        </div>\n      )\n    });\n    return (\n      <div className=\"App\">\n\n        <nav className=\"navbar navbar-dark bg-warning\">\n          <a className=\"navbar-brand\" >\n            Lista de Cocina\n            <span className=\"badge badge-pill badge-light ml-2\">\n              {this.state.todos.length}\n            </span>\n          </a>\n        </nav>\n\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n\n            <div className=\"col-md-12 text-center\">\n              <Form onAddTodo={this.upList}></Form>\n            </div>\n\n            <div className=\"col-md-12 d-flex justify-content-center align-items-center mt-3\">\n              <div className=\"row cuadro\">\n                {todos}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}